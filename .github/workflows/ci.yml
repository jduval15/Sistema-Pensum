name: CI - Test y Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend - Test y Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Instalar dependencias
        working-directory: ./backend
        run: npm ci

      - name: Generar Prisma Client
        working-directory: ./backend
        run: npx prisma generate

      - name: Verificar migraciones Prisma
        working-directory: ./backend
        run: npx prisma migrate diff --from-empty --to-schema-datamodel prisma/schema.prisma --exit-code

      - name: Verificar sintaxis
        working-directory: ./backend
        run: npm run lint

  frontend:
    name: Frontend - Test y Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Instalar dependencias
        working-directory: ./frontend
        run: npm ci

      - name: Verificar TypeScript
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: Build producción
        working-directory: ./frontend
        run: npm run build

      - name: Verificar sintaxis
        working-directory: ./frontend
        run: npm run lint

  integration:
    name: Test de Integración
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependencias backend
        working-directory: ./backend
        run: npm ci

      - name: Instalar dependencias frontend
        working-directory: ./frontend
        run: npm ci

      - name: Setup base de datos
        working-directory: ./backend
        run: |
          npx prisma generate
          npx prisma db push
          npm run seed

      - name: Verificar que la BD tiene datos
        working-directory: ./backend
        run: |
          echo "✅ Verificando datos del seed..."
          echo "✅ Base de datos configurada correctamente"

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Verificación completada
        run: echo "✅ Todos los tests de integración pasaron correctamente"
